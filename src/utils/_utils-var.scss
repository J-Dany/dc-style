@use "../variables";

$prefix: #{variables.$prefix}-;

$utilities: (
  "align":
    (
      property: vertical-align,
      class: align,
      values: baseline top middle bottom text-bottom text-top,
    ),
  "float":
    (
      responsive: true,
      property: float,
      values: (
        start: left,
        end: right,
        none: none,
      ),
    ),
  "object-fit":
    (
      responsive: true,
      property: object-fit,
      values: (
        contain: contain,
        cover: cover,
        fill: fill,
        scale: scale-down,
        none: none,
      ),
    ),
  "opacity":
    (
      property: opacity,
      values: (
        0: 0,
        25: 0.25,
        50: 0.5,
        75: 0.75,
        100: 1,
      ),
    ),
  "overflow":
    (
      property: overflow,
      values: auto hidden visible scroll,
    ),
  "overflow-x": (
    property: overflow-x,
    values: auto hidden visible scroll,
  ),
  "overflow-y": (
    property: overflow-y,
    values: auto hidden visible scroll,
  ),
  "display":
    (
      responsive: true,
      print: true,
      property: display,
      class: d,
      values: inline inline-block block grid inline-grid table table-row
        table-cell flex inline-flex none,
    ),
  "shadow":
    (
      property: box-shadow,
      class: shadow,
      values: (
        null: var(--#{$prefix}-box-shadow),
        sm: var(--#{$prefix}-box-shadow-sm),
        lg: var(--#{$prefix}-box-shadow-lg),
        none: none,
      ),
    ),
  "position":
    (
      property: position,
      values: static relative absolute fixed sticky,
    ),
  "top": (
    property: top,
    values: variables.$positionValues,
  ),
  "bottom": (
    property: bottom,
    values: variables.$positionValues,
  ),
  "start": (
    property: left,
    class: start,
    values: variables.$positionValues,
  ),
  "end": (
    property: right,
    class: end,
    values: variables.$positionValues,
  ),
  "translate-middle": (
    property: transform,
    class: translate-middle,
    values: (
      null: translate(-50%, -50%),
      x: translateX(-50%),
      y: translateY(-50%),
    ),
  ),
  "width":
    (
      property: width,
      class: w,
      values: (
        25: 25%,
        50: 50%,
        75: 75%,
        100: 100%,
        auto: auto,
      ),
    ),
  "max-width": (
    property: max-width,
    class: mw,
    values: (
      25: 25%,
      50: 50%,
      75: 75%,
      100: 100%,
      auto: auto,
    ),
  ),
  "viewport-width": (
    property: width,
    class: vw,
    values: (
      100: 100vw,
    ),
  ),
  "min-viewport-width": (
    property: min-width,
    class: min-vw,
    values: (
      25: 25vw,
      50: 50vw,
      75: 75vw,
      100: 100vw,
    ),
  ),
  "height": (
    property: height,
    class: h,
    values: (
      25: 25%,
      50: 50%,
      75: 75%,
      100: 100%,
      auto: auto,
    ),
  ),
  "max-height": (
    property: max-height,
    class: mh,
    values: (
      25: 25%,
      50: 50%,
      75: 75%,
      100: 100%,
      auto: auto,
    ),
  ),
  "viewport-height": (
    property: height,
    class: vh,
    values: (
      25: 25vh,
      50: 50vh,
      75: 75vh,
      100: 100vh,
    ),
  ),
  "min-viewport-height": (
    property: min-height,
    class: min-vh,
    values: (
      25: 25vh,
      50: 50vh,
      75: 75vh,
      100: 100vh,
    ),
  ),
  "flex":
    (
      responsive: true,
      property: flex,
      values: (
        fill: 1 1 auto,
      ),
    ),
  "flex-direction": (
    responsive: true,
    property: flex-direction,
    class: flex,
    values: row column row-reverse column-reverse,
  ),
  "flex-grow": (
    responsive: true,
    property: flex-grow,
    class: flex,
    values: (
      grow-0: 0,
      grow-1: 1,
    ),
  ),
  "flex-shrink": (
    responsive: true,
    property: flex-shrink,
    class: flex,
    values: (
      shrink-0: 0,
      shrink-1: 1,
    ),
  ),
  "flex-wrap": (
    responsive: true,
    property: flex-wrap,
    class: flex,
    values: wrap nowrap wrap-reverse,
  ),
  "justify-content": (
    responsive: true,
    property: justify-content,
    values: (
      start: flex-start,
      end: flex-end,
      center: center,
      between: space-between,
      around: space-around,
      evenly: space-evenly,
    ),
  ),
  "align-items": (
    responsive: true,
    property: align-items,
    values: (
      start: flex-start,
      end: flex-end,
      center: center,
      baseline: baseline,
      stretch: stretch,
    ),
  ),
  "align-content": (
    responsive: true,
    property: align-content,
    values: (
      start: flex-start,
      end: flex-end,
      center: center,
      between: space-between,
      around: space-around,
      stretch: stretch,
    ),
  ),
  "align-self": (
    responsive: true,
    property: align-self,
    values: (
      auto: auto,
      start: flex-start,
      end: flex-end,
      center: center,
      baseline: baseline,
      stretch: stretch,
    ),
  ),
  "order": (
    responsive: true,
    property: order,
    values: (
      first: -1,
      0: 0,
      1: 1,
      2: 2,
      3: 3,
      4: 4,
      5: 5,
      last: 6,
    ),
  ),
  "margin":
    (
      responsive: true,
      property: margin,
      class: m,
      values:
        map-merge(
          variables.$spacers,
          (
            auto: auto,
          )
        ),
    ),
  "margin-x": (
    responsive: true,
    property: margin-right margin-left,
    class: mx,
    values:
      map-merge(
        variables.$spacers,
        (
          auto: auto,
        )
      ),
  ),
  "margin-y": (
    responsive: true,
    property: margin-top margin-bottom,
    class: my,
    values:
      map-merge(
        variables.$spacers,
        (
          auto: auto,
        )
      ),
  ),
  "margin-top": (
    responsive: true,
    property: margin-top,
    class: mt,
    values:
      map-merge(
        variables.$spacers,
        (
          auto: auto,
        )
      ),
  ),
  "margin-end": (
    responsive: true,
    property: margin-right,
    class: me,
    values:
      map-merge(
        variables.$spacers,
        (
          auto: auto,
        )
      ),
  ),
  "margin-bottom": (
    responsive: true,
    property: margin-bottom,
    class: mb,
    values:
      map-merge(
        variables.$spacers,
        (
          auto: auto,
        )
      ),
  ),
  "margin-start": (
    responsive: true,
    property: margin-left,
    class: ms,
    values:
      map-merge(
        variables.$spacers,
        (
          auto: auto,
        )
      ),
  ),
  "padding":
    (
      responsive: true,
      property: padding,
      class: p,
      values: variables.$spacers,
    ),
  "padding-x": (
    responsive: true,
    property: padding-right padding-left,
    class: px,
    values: variables.$spacers,
  ),
  "padding-y": (
    responsive: true,
    property: padding-top padding-bottom,
    class: py,
    values: variables.$spacers,
  ),
  "padding-top": (
    responsive: true,
    property: padding-top,
    class: pt,
    values: variables.$spacers,
  ),
  "padding-end": (
    responsive: true,
    property: padding-right,
    class: pe,
    values: variables.$spacers,
  ),
  "padding-bottom": (
    responsive: true,
    property: padding-bottom,
    class: pb,
    values: variables.$spacers,
  ),
  "padding-start": (
    responsive: true,
    property: padding-left,
    class: ps,
    values: variables.$spacers,
  ),
  "gap":
    (
      responsive: true,
      property: gap,
      class: gap,
      values: variables.$spacers,
    ),
  "row-gap": (
    responsive: true,
    property: row-gap,
    class: row-gap,
    values: variables.$spacers,
  ),
  "column-gap": (
    responsive: true,
    property: column-gap,
    class: column-gap,
    values: variables.$spacers,
  ),
  "font-family":
    (
      property: font-family,
      class: font,
      values: (
        monospace: var(--#{$prefix}font-monospace),
      ),
    ),
  "font-size": (
    rfs: true,
    property: font-size,
    class: fs,
    values: variables.$fontSizes,
  ),
  "font-style": (
    property: font-style,
    class: fst,
    values: italic normal,
  ),
  "font-weight": (
    property: font-weight,
    class: fw,
    values: (
      lighter: variables.$fontWeightLighter,
      light: variables.$fontWeightLight,
      normal: variables.$fontWeightNormal,
      medium: variables.$fontWeightMedium,
      semibold: variables.$fontWeightSemibold,
      bold: variables.$fontWeightBold,
      bolder: variables.$fontWeightBolder,
    ),
  ),
  "text-align": (
    responsive: true,
    property: text-align,
    class: text,
    values: (
      start: left,
      end: right,
      center: center,
    ),
  ),
  "text-decoration": (
    property: text-decoration,
    values: none underline line-through,
  ),
  "text-transform": (
    property: text-transform,
    class: text,
    values: lowercase uppercase capitalize,
  ),
  "white-space": (
    property: white-space,
    class: text,
    values: (
      wrap: normal,
      nowrap: nowrap,
    ),
  ),
  "word-wrap": (
    property: word-wrap word-break,
    class: text,
    values: (
      break: break-word,
    ),
    rtl: false,
  ),
  "text-opacity": (
    css-var: true,
    class: text-opacity,
    values: (
      25: 0.25,
      50: 0.5,
      75: 0.75,
      100: 1,
    ),
  ),
  "link-opacity":
    (
      css-var: true,
      class: link-opacity,
      state: hover,
      values: (
        10: 0.1,
        25: 0.25,
        50: 0.5,
        75: 0.75,
        100: 1,
      ),
    ),
  "link-offset": (
    property: text-underline-offset,
    class: link-offset,
    state: hover,
    values: (
      1: 0.125em,
      2: 0.25em,
      3: 0.375em,
    ),
  ),
  "link-underline-opacity": (
    css-var: true,
    class: link-underline-opacity,
    state: hover,
    values: (
      0: 0,
      10: 0.1,
      25: 0.25,
      50: 0.5,
      75: 0.75,
      100: 1,
    ),
  ),
  "bg-opacity": (
    css-var: true,
    class: bg-opacity,
    values: (
      10: 0.1,
      25: 0.25,
      50: 0.5,
      75: 0.75,
      100: 1,
    ),
  ),
  "user-select":
    (
      property: user-select,
      values: all auto none,
    ),
  "pointer-events": (
    property: pointer-events,
    class: pe,
    values: none auto,
  ),
  "rounded":
    (
      property: border-radius,
      class: rounded,
      values: (
        null: var(--#{$prefix}border-radius),
        0: 0,
        1: var(--#{$prefix}border-radius-sm),
        2: var(--#{$prefix}border-radius),
        3: var(--#{$prefix}border-radius-lg),
        4: var(--#{$prefix}border-radius-xl),
        5: var(--#{$prefix}border-radius-xxl),
        circle: 50%,
        pill: var(--#{$prefix}border-radius-pill),
      ),
    ),
  "rounded-top": (
    property: border-top-left-radius border-top-right-radius,
    class: rounded-top,
    values: (
      null: var(--#{$prefix}border-radius),
      0: 0,
      1: var(--#{$prefix}border-radius-sm),
      2: var(--#{$prefix}border-radius),
      3: var(--#{$prefix}border-radius-lg),
      4: var(--#{$prefix}border-radius-xl),
      5: var(--#{$prefix}border-radius-xxl),
      circle: 50%,
      pill: var(--#{$prefix}border-radius-pill),
    ),
  ),
  "rounded-end": (
    property: border-top-right-radius border-bottom-right-radius,
    class: rounded-end,
    values: (
      null: var(--#{$prefix}border-radius),
      0: 0,
      1: var(--#{$prefix}border-radius-sm),
      2: var(--#{$prefix}border-radius),
      3: var(--#{$prefix}border-radius-lg),
      4: var(--#{$prefix}border-radius-xl),
      5: var(--#{$prefix}border-radius-xxl),
      circle: 50%,
      pill: var(--#{$prefix}border-radius-pill),
    ),
  ),
  "rounded-bottom": (
    property: border-bottom-right-radius border-bottom-left-radius,
    class: rounded-bottom,
    values: (
      null: var(--#{$prefix}border-radius),
      0: 0,
      1: var(--#{$prefix}border-radius-sm),
      2: var(--#{$prefix}border-radius),
      3: var(--#{$prefix}border-radius-lg),
      4: var(--#{$prefix}border-radius-xl),
      5: var(--#{$prefix}border-radius-xxl),
      circle: 50%,
      pill: var(--#{$prefix}border-radius-pill),
    ),
  ),
  "rounded-start": (
    property: border-bottom-left-radius border-top-left-radius,
    class: rounded-start,
    values: (
      null: var(--#{$prefix}border-radius),
      0: 0,
      1: var(--#{$prefix}border-radius-sm),
      2: var(--#{$prefix}border-radius),
      3: var(--#{$prefix}border-radius-lg),
      4: var(--#{$prefix}border-radius-xl),
      5: var(--#{$prefix}border-radius-xxl),
      circle: 50%,
      pill: var(--#{$prefix}border-radius-pill),
    ),
  ),
  "visibility":
    (
      property: visibility,
      class: null,
      values: (
        visible: visible,
        invisible: hidden,
      ),
    ),
);